name: Check

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  ci-backend:
    name: Backend
    runs-on: ubuntu-latest
    timeout-minutes: 20
    container: golang:1.21-bookworm
    defaults:
      run:
        working-directory: ./backend
    services:
      db:
        image: postgres:15-bookworm
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: conf
        options: >-
          --health-cmd "pg_isready -U postgres -d conf"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      smtp:
        image: marlonb/mailcrab:latest
        ports:
          - 1025:1025
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      - name: Build
        run: go build -buildvcs=false .

      - name: Run test & coverage
        run: go test -v -coverprofile=coverage.out -covermode=atomic ./...
        env:
          TZ: UTC
          DATABASE_URL: postgres://postgres:password@db:5432/conf?sslmode=disable
          SMTP_HOSTNAME: smtp
          DB_HOST: db
          DB_USER: postgres
          DB_PASSWORD: password
          DB_NAME: conf

      - uses: codecov/codecov-action@v3

  ci-frontend:
    name: Frontend
    runs-on: ubuntu-latest
    timeout-minutes: 20
    container: node:20.5.1-bookworm
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build
