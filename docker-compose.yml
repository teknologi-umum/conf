# DISCLAIMER:
#   We use this docker compose file for development purposes only.
#   Please don't directly use this configuration for production deployment.

services:
  postgres:
    image: postgres:15.3-bookworm
    ports:
      - 127.0.0.1:5432:5432
    environment:
      POSTGRES_PASSWORD: VeryStrongPassword
      POSTGRES_USER: conference
      POSTGRES_DB: conference
      TZ: UTC
    healthcheck:
      test: pg_isready
      interval: 30s
      timeout: 20s
      retries: 10
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 30s
        window: 120s
      resources:
        limits:
          memory: 2GB
          cpus: '2'
        reservations:
          memory: 50MB
          cpus: '0.10'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    logging:
      driver: local
      options:
        max-size: 10M

  mailcrab:
    image: marlonb/mailcrab:latest
    ports:
      - 127.0.0.1:1025:1025
      - 127.0.0.1:8025:1080
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 30s
        window: 120s
      resources:
        limits:
          memory: 500MB
          cpus: '1'
    logging:
      driver: local
      options:
        max-size: 10M

  backend-migrate:
    build: ./backend
    entrypoint: /app/conf-backend migrate up
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: conference
      DB_PASSWORD: VeryStrongPassword
      DB_NAME: conference
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: local
      options:
        max-size: 10M

  backend:
    build: ./backend
    ports:
      - 127.0.0.1:8080:8080
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: conference
      DB_PASSWORD: VeryStrongPassword
      DB_NAME: conference
      PORT: 8080
    depends_on:
      backend-migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      mailcrab:
        condition: service_started
    logging:
      driver: local
      options:
        max-size: 10M

  frontend:
    build: ./frontend
    ports:
      - 127.0.0.1:3000:3000
    depends_on:
      backend:
        condition: service_started
    logging:
      driver: local
      options:
        max-size: 10M

volumes:
  postgres-data:
